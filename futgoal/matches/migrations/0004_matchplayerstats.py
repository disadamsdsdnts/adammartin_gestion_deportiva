# Generated by Django 5.2 on 2025-06-08 11:07

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('matches', '0003_auto_20250606_1917'),
        ('players', '0005_player_dorsal'),
    ]

    operations = [
        migrations.CreateModel(
            name='MatchPlayerStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de la creación del objeto.', verbose_name='Fecha de creación')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última modificación del objeto.', verbose_name='Fecha de modificación')),
                ('goals', models.PositiveIntegerField(default=0, help_text='Número de goles marcados por el jugador en este partido', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Goles')),
                ('assists', models.PositiveIntegerField(default=0, help_text='Número de asistencias realizadas por el jugador en este partido', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Asistencias')),
                ('yellow_cards', models.PositiveIntegerField(default=0, help_text='Número de tarjetas amarillas recibidas', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2)], verbose_name='Tarjetas amarillas')),
                ('red_cards', models.PositiveIntegerField(default=0, help_text='Número de tarjetas rojas recibidas (0 o 1)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Tarjetas rojas')),
                ('minutes_played', models.PositiveIntegerField(default=0, help_text='Minutos jugados en el partido (incluyendo tiempo extra)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(120)], verbose_name='Minutos jugados')),
                ('status', models.CharField(choices=[('starter', 'Titular'), ('substitute', 'Suplente'), ('bench', 'En el banquillo'), ('not_available', 'No disponible')], default='bench', help_text='Estado del jugador durante el partido', max_length=20, verbose_name='Estado en el partido')),
                ('substitution_in', models.PositiveIntegerField(blank=True, help_text='Minuto en el que el jugador entró al campo', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(120)], verbose_name='Minuto de entrada')),
                ('substitution_out', models.PositiveIntegerField(blank=True, help_text='Minuto en el que el jugador salió del campo', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(120)], verbose_name='Minuto de salida')),
                ('performance_notes', models.TextField(blank=True, help_text='Observaciones específicas sobre el rendimiento del jugador en este partido', null=True, verbose_name='Notas de rendimiento')),
                ('rating', models.DecimalField(blank=True, decimal_places=1, help_text='Calificación del rendimiento del jugador (0-10)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Calificación')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_stats', to='matches.match', verbose_name='Partido')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_stats', to='players.player', verbose_name='Jugador')),
            ],
            options={
                'verbose_name': 'Estadística de Jugador en Partido',
                'verbose_name_plural': 'Estadísticas de Jugadores en Partidos',
                'ordering': ['-match__match_date', 'player__sport_name'],
                'unique_together': {('match', 'player')},
            },
        ),
    ]
